Public Sub ImportCsvToTestDocs()
    Dim fPath As String
    With Application.FileDialog(msoFileDialogFilePicker)
        .Title = "Choose a CSV file to import"
        .AllowMultiSelect = False
        .Filters.Clear
        .Filters.Add "CSV files", "*.csv"
        If .Show <> -1 Then Exit Sub
        fPath = .SelectedItems(1)
    End With

    Dim wbCSV As Workbook, src As Worksheet
    Dim dst As Worksheet

    Application.ScreenUpdating = False

    ' Open the CSV in a temp workbook
    Set wbCSV = Workbooks.Open(Filename:=fPath, Local:=True)
    Set src = wbCSV.Worksheets(1)

    ' Use the existing "Test Docs" sheet
    On Error Resume Next
    Set dst = ThisWorkbook.Worksheets("Test Docs")
    On Error GoTo 0
    If dst Is Nothing Then
        MsgBox "Sheet 'Test Docs' not found!", vbExclamation
        wbCSV.Close SaveChanges:=False
        Exit Sub
    End If

    ' Clear old contents before copying
    dst.Cells.Clear

    ' Copy values (and headers) exactly as Excel parsed them
    dst.Range("A1").Resize(src.UsedRange.Rows.Count, src.UsedRange.Columns.Count).Value = src.UsedRange.Value

    ' Clean possible BOM in A1
    dst.Range("A1").Value = Replace(CStr(dst.Range("A1").Value), ChrW(&HFEFF), "")

    ' Auto-fit columns
    dst.Columns.AutoFit

    ' Close temp CSV
    wbCSV.Close SaveChanges:=False

    Application.ScreenUpdating = True

    MsgBox "CSV imported into sheet 'Test Docs'.", vbInformation
End Sub

' Format alternating columns (B, D, F, ...) with word wrap and fixed width,
' and AutoFit row heights so all text is visible.
' Call this AFTER you import:  FormatAlternatingWrap Worksheets("Test Docs")
Public Sub FormatAlternatingWrap(ByVal ws As Worksheet, _
                                Optional ByVal headerRow As Long = 1, _
                                Optional ByVal startWrapCol As Long = 2, _   ' 2 = Column B
                                Optional ByVal wrapWidth As Double = 40, _   ' characters
                                Optional ByVal otherWidth As Double = 18, _
                                Optional ByVal shadeHeader As Boolean = True)

    Dim ur As Range
    Dim lastCol As Long, lastRow As Long
    Dim c As Long
    Dim dataRng As Range, dataRows As Range

    If ws Is Nothing Then Exit Sub
    Set ur = ws.UsedRange
    If ur Is Nothing Then Exit Sub

    Application.ScreenUpdating = False

    ' Determine bounds
    lastCol = ws.Cells(headerRow, ws.Columns.Count).End(xlToLeft).Column
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    If lastCol < 1 Or lastRow < headerRow Then GoTo Tidy

    ' 1) Header style (optional)
    If shadeHeader Then
        With ws.Rows(headerRow)
            .Font.Bold = True
            .Interior.Color = RGB(242, 242, 242)
            .WrapText = False
            .VerticalAlignment = xlCenter
        End With
    End If

    ' 2) Default: turn OFF wrap everywhere first; set a base width
    ws.Cells.WrapText = False
    ws.Columns.ColumnWidth = otherWidth

    ' 3) Apply wrap to alternating columns (B, D, F, ...) across the whole used rows
    For c = 1 To lastCol
        If c >= startWrapCol And ((c - startWrapCol) Mod 2 = 0) Then
            ws.Columns(c).WrapText = True
            ws.Columns(c).ColumnWidth = wrapWidth
            ws.Columns(c).VerticalAlignment = xlTop
        Else
            ws.Columns(c).WrapText = False
            ws.Columns(c).ColumnWidth = otherWidth
            ws.Columns(c).VerticalAlignment = xlTop
        End If
    Next c

    ' 4) AutoFit row heights AFTER widths & wrap are set
    '    (Excel is picky: do rows, then a tiny nudge to ensure full expansion)
    Set dataRows = ws.Range(ws.Cells(headerRow + 1, 1), ws.Cells(lastRow, lastCol)).EntireRow
    If Not dataRows Is Nothing Then
        dataRows.AutoFit
        ' Nudge: slightly increase any very tight rows
        Dim r As Range
        For Each r In dataRows.Rows
            If r.RowHeight < 15 Then r.RowHeight = 15
        Next r
    End If

Tidy:
    Application.ScreenUpdating = True
End Sub